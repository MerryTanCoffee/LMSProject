package kr.or.ddit.user.controller;

import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.common.vo.DepartmentVO;
import kr.or.ddit.user.service.IUserService;
import kr.or.ddit.user.vo.EmployeeVO;
import kr.or.ddit.user.vo.ProfessorVO;
import kr.or.ddit.user.vo.StudentVO;
import kr.or.ddit.common.vo.PaginationInfoVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/user")
public class UserListController {
	
	@Autowired
	private IUserService userService;
	
	
	@RequestMapping(value="/list")
	public String studentList(@RequestParam(name="page",required = false, defaultValue = "1")int currentPage, 
			@RequestParam(required = false, defaultValue = "title") String searchType, 
			@RequestParam(required = false)String searchWord,
			Model model) {
		PaginationInfoVO<StudentVO> pagingVO = new PaginationInfoVO<StudentVO>();
		
		// searchWord가 공백이 아니면 검색을 한 상태일 테니까
		if(StringUtils.isNotBlank(searchWord)) {
			pagingVO.setSearchType(searchType);
			pagingVO.setSearchWord(searchWord);
			model.addAttribute("searchType",searchType);
			model.addAttribute("searchWord",searchWord);
		}
		pagingVO.setCurrentPage(currentPage);
		int totalRecord = userService.selectStuListCount(pagingVO);
		pagingVO.setTotalRecord(totalRecord);
		
		List<StudentVO> studentList = userService.selectStuList(pagingVO);
		pagingVO.setDataList(studentList);
		
		model.addAttribute("pagingVO",pagingVO);
		
		return"user/userList2";
	}
	
	
	
//	@GetMapping("/list")
//	public String stuList(Model model) {		
//
//		List<StudentVO> student = userService.selectAllStudents();
//		model.addAttribute("student",student);
//		model.addAttribute("status","s");
//		log.info("student >> " + student);
//
//		return "user/userList";
//	}
//	

	@GetMapping("/proList")
	public String proList(Model model) {		

		
		List<ProfessorVO> professor = userService.selectAllProfessors();
		model.addAttribute("professor",professor);
		model.addAttribute("status","p");
		log.info("professor >> " + professor);
		
		return "user/userList";
	}
	
	@GetMapping("/empList")
	public String empList(Model model) {		
		
		List<EmployeeVO> employee = userService.selectAllEmployees();
		model.addAttribute("employee",employee);
		model.addAttribute("status","e");
		log.info("employee >> " + employee);
		
		return "user/userList";
	}
	
	
	@ResponseBody
	@RequestMapping(value="/departList", method=RequestMethod.POST, produces="application/json;charset=utf-8")
	public List<DepartmentVO> getDepartList(@RequestBody Map<String, String> dataMap) {
		
		List<DepartmentVO> department = userService.selectAllDeparts(dataMap.get("collCode"));
		
		return department;
	}
	
	@ResponseBody
	@RequestMapping(value="/stuSearch", method=RequestMethod.POST, produces="application/json;charset=utf-8")
	public List<StudentVO> getStuSearchList(@RequestBody Map<String,String> dataMap) {

		List<StudentVO> stuSearch = userService.selectStuSearch(dataMap);
		
		return stuSearch;
 	}
}
